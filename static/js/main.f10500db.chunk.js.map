{"version":3,"sources":["redux/messagesReduser.js","components/profile/myProfile/profileDataform.js","components/myPosts/myPosts.js","assets/images/ava.webp","components/myPosts/Post/Post.js","components/profile/profile.module.css","components/timeStudy/timeStudy.module.css","StoreContext.js","api/api.js","components/dialogs/Dialogitem/dialogitem.js","components/dialogs/Message/message.js","components/Preloader/preloader.module.css","redux/authReducer.js","utils/validator.js","redux/profileReducer.js","assets/images/logo.svg","components/header/header.js","components/footer/footer.js","components/leftMenu/leftMenu.js","components/myPosts/myPostsContainer.js","components/profile/profileStatus.js","components/profile/profileStatusHooks.js","assets/images/topimg.jpg","components/profile/profile.js","utils/object-helpers.js","redux/userReducer.js","redux/userSelector.js","components/Paginator/paginator.js","components/users/user.js","components/users/users.js","components/users/usersContainer.js","components/header/headerContainer.js","components/FormControls/Input.js","pages/login/login.js","redux/appReducer.js","components/profile/profileContainer.js","components/timeStudy/timeStudy.js","pages/study/study.js","App.js","components/hoc/withSuspense.js","reportWebVitals.js","redux/redux-store.js","index.js","components/leftMenu/leftMenu.module.css","components/users/users.module.css","components/Preloader/preloader.js","components/FormControls/FormControl.module.css","components/dialogs/dialogs.module.css","components/dialogs/dialogs.js","components/FormControls/Textarea.js","components/hoc/withAuthRedirect.js","assets/images/avanone.webp","components/header/header.module.css"],"names":["ADD_MESSAGE","initialState","messages","id","message","dialogs","name","messageReducer","state","action","type","newMessage","newText","addMessageActionCreator","text","ReduxProfileForm","reduxForm","form","props","profile","handleSubmit","error","console","log","onSubmit","onClick","className","style","formError","Field","validate","component","placeholder","Object","keys","contacts","map","key","maxLength10","maxLengthCreator","WallReduxForm","requireField","Textarea","ProfileData","isowner","setEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Posts","useState","editMod","newPostsData","posts","post","Post","like","onChange","e","target","files","length","savePhoto","src","photos","large","avanone","alt","initialValues","formData","saveProfile","then","addPost","textarea","ava","module","exports","instance","axios","baseURL","withCredentials","headers","userApi","getUsersApi","pageSize","currentPage","get","response","data","postUser","Userid","deleteUser","delete","getLoginName","getProfile","UserId","warn","profileApi","getProfileStatus","updateProfileStatus","status","put","photoFile","FormData","append","updateProfile","loginApi","loginPost","email","password","rememberMe","captcha","logoutPost","securityAPI","getCaptchaUrl","DialogItem","to","activeClassName","active","Message","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","userId","login","isAuth","captchaUrl","authReduser","payload","getCaptchaAction","setUserData","userName","dispatch","a","resultCode","userlogin","stopSubmit","_error","userlogut","url","value","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCES","getRandomInt","min","max","Math","floor","random","initialStatedsasad","profileReducer","newPost","newPostText","filter","p","Postid","setUserProfile","setUserStatus","addPostActionCreator","userid","ProfileShow","StatusShow","updateStatus","file","responce","getState","Promise","reject","Header","href","logo","loginBlock","Footer","LeftMenu","leftMenu","item","MyPostsContainer","connect","React","Component","ProfileStatusHooks","editMode","setStatus","useEffect","onDoubleClick","currentTarget","autoFocus","onBlur","Profile","topimg","content","updateObjectInArray","items","objPropName","newObjProps","user","FOLLOW","UNFOLLOW","TOOGLE_FOLLOWIN_PROGRESS","SET_USERS","SET_CURRENT_PAGE","SET_USER_COUNT","TOGGLE_IS_FETCHING","users","totalUsersCount","isFetching","followingInProgress","follow","unfollow","toogleFollowingInProgress","setUsers","currentPageClick","setIsFetching","followUnfollowFlow","apiMethod","actionCreator","getUsersSuperSelector","createSelector","usersReducer","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","PaginatorComponent","activePage","pageNumber","this","setState","onPageClick","pagesCount","ceil","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","itemClass","linkClass","handlePageChange","bind","Paginator","compose","User","deleteUsersThunk","postUsersThunk","block","buttonFriends","followed","disabled","some","userprofile","avatar","small","Users","pagination","UserContainer","getUsersThunk","postDeleteUsersThunk","UsersContainer","countUsers","totalCount","HeaderContainer","Input","input","meta","hasError","touched","LoginReduxForm","SET_INITIALIZED","initialized","ProfileContainer","match","params","userIdMy","history","push","refrashProfile","prevProps","prevState","snapshot","withRouter","VisibleTime","dateState","timeState","study","TimeStudy","arrTime","arrTimeVisible","date","time","SEcondTime","str","massTime","split","Number","col","allTime","seconds","parseInt","days","hrs","mnts","String","TimeDay","cn","classes","timeStudy","color","withAuthRedirect","DialogsConteiner","lazy","App","catchAllUnhandledErrors","promiseRejectionEvent","alert","initializeApp","window","addEventListener","removeEventListener","exact","path","render","Suspense","fallback","appReduser","promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddlewaer","__store__","ReactDOM","document","getElementById","Preloader","lds_spinner","maxLength100","DialogReduxForm","Dialogs","newDialogData","dialog","newMessangesData","dislogs","dialog_items","messanges","addMessage","mapStateToPropsForRedirect"],"mappings":"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","file":"static/js/main.f10500db.chunk.js","sourcesContent":["const ADD_MESSAGE = 'ADD-MESSAGE'\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Привет'},\r\n        {id: 2, message: 'Завтра едем смотреть динозавров'},\r\n        {id: 3, message: 'В эко парк'},\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Маша'},\r\n        {id: 2, name: 'Антон'},\r\n        {id: 3, name: 'Ванька'},\r\n        {id: 4, name: 'Танька'},\r\n    ]\r\n}\r\n\r\nexport const messageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id: 5,\r\n                message: action.newText,\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addMessageActionCreator = (text) => ({   type: ADD_MESSAGE, newText: text })","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {requireField} from \"../../../utils/validator\";\r\nimport {Textarea} from \"../../FormControls/Textarea\";\r\nimport {Checkbox} from \"antd\";\r\nimport style from \"../../FormControls/FormControl.module.css\";\r\n\r\nconst ProfileForm = ({profile, handleSubmit, error}, props) => {\r\n\r\n    console.log(\"errorerrorerrorerror\", error)\r\n\r\n    return  <form onSubmit={handleSubmit}>\r\n        <button onClick={() => {}}>Сохранить</button><br/><br/>\r\n\r\n        { error && < div className={style.formError}> {error}  sdsd</div> }\r\n\r\n        <strong>Имя:</strong> <br/>\r\n        <Field validate={[]} component=\"input\" type=\"text\" name={\"fullName\"}  placeholder={\"введите имя\"} />\r\n\r\n        <br/><br/>\r\n        <strong>Обо мне:</strong> <br/>\r\n\r\n        <Field validate={[]} component=\"input\" type=\"text\" name=\"aboutMe\"  placeholder={\"Обо мне \"} />\r\n\r\n        <strong>Ищет работу:</strong> <Field validate={[]} component=\"input\" type=\"checkbox\" name={\"lookingForAJob\"}  /> <br/>\r\n\r\n        <strong>О работе:</strong> <br/>\r\n        <Field validate={[]} component=\"textarea\" name={\"lookingForAJobDescription\"}  placeholder={\"о работе\"} />\r\n        <strong>Контакты:</strong>\r\n        { Object.keys(profile.contacts).map(key => {\r\n            return <div key={key}>\r\n                        <Field validate={[]} component=\"input\" type=\"text\" name={'contacts.'+key}   placeholder={key} />\r\n\r\n            </div>\r\n        })}\r\n    </form>\r\n\r\n}\r\n\r\n\r\nconst ReduxProfileForm = reduxForm({\r\n    form: 'ReduxProfileForm'\r\n})(ProfileForm)\r\n\r\nexport default ReduxProfileForm\r\n","import React, {useState} from 'react';\r\nimport './myPosts.css'\r\nimport {Post} from \"./Post/Post\";\r\nimport Preloader from \"../Preloader/preloader\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requireField} from \"../../utils/validator\";\r\nimport {Textarea} from \"../FormControls/Textarea\";\r\nimport avanone from \"../../assets/images/avanone.webp\";\r\nimport ProfileForm from \"../profile/myProfile/profileDataform\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst FormPost = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field validate={[requireField, maxLength10]} component={Textarea} name={\"textarea\"}  placeholder={\"введите сообщение\"} />\r\n            <button>Отправить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst WallReduxForm = reduxForm({\r\n    form: 'wall'\r\n})(FormPost)\r\n\r\n\r\nexport const ProfileData = (props) => {\r\n\r\n    return  <div>\r\n        { props.isowner &&  <button onClick={() => {  props.setEditMode(true)  }}>Редактировать</button> }\r\n        <strong>Имя:</strong> {props.profile.fullName}<br/>\r\n        <strong>Обо мне:</strong> {props.profile.aboutMe}<br/>\r\n        <strong>Ищет работу:</strong> {props.profile.lookingForAJob ? <span>Да</span> : <span>Нет</span>} <br/>\r\n        <strong>О работе:</strong> {props.profile.lookingForAJobDescription} <br/>\r\n        <strong>Контакты:</strong>\r\n        { Object.keys(props.profile.contacts).map(key => {\r\n            return <div key={key}>\r\n                {key} {props.profile.contacts.[key]}\r\n            </div>\r\n        })}\r\n    </div>\r\n\r\n}\r\n\r\n\r\n\r\nexport const Posts =  (props) => {\r\n\r\n    let [editMod, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    let newPostsData = props.posts.map(post => (\r\n        <Post message={post.message} key={post.id} like={post.like}/>))\r\n\r\n    const onSubmit = (formData) => {\r\n        props.addPost(formData.textarea)\r\n        formData.textarea = \"\"\r\n    }\r\n\r\n    const onSubmitEditForm = (formData) => {\r\n        props.saveProfile(formData).then (\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const onMainFotoSelected = (e) => {\r\n        if(e.target.files.length)\r\n        {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Мои посты! <br/><br/>\r\n\r\n            Аватар <br/>\r\n            {props.isowner && <input type=\"file\" onChange={onMainFotoSelected}/>}\r\n            <img src={props.profile.photos.large || avanone } className={'mainfoto'} alt=\"\"/><br/>\r\n\r\n            { editMod ? <ProfileForm initialValues={props.profile} onSubmit={onSubmitEditForm} {...props} /> : <ProfileData setEditMode={setEditMode} {...props} />}\r\n\r\n            <br/><br/><br/>\r\n            <div>Новый пост</div>\r\n            {<WallReduxForm onSubmit={onSubmit}/>}\r\n            {newPostsData}\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/ava.30f12791.webp\";","import './Post.css'\r\nimport ava from \"../../../assets/images/ava.webp\";\r\n\r\nexport const Post = (props) => {\r\n    return (\r\n        <div className=\"item\">\r\n            <div className=\"img\"><img src={ava} alt=\"\"/></div>\r\n            <div className=\"text\">{props.message }</div>\r\n            <div className=\"like\">{props.like } like</div>\r\n        </div>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topimg\":\"profile_topimg__Vcfz3\",\"content\":\"profile_content__3QBdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeStudy\":\"timeStudy_timeStudy__1JqNZ\",\"color\":\"timeStudy_color__Po-4l\"};","import React from 'react'\r\n\r\nconst StoreContext = React.createContext(null);\r\n\r\nexport default StoreContext;","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY':'e00624ca-0648-4efd-9fcc-56771035be83'\r\n    }\r\n})\r\n\r\n\r\n//метод\r\nexport const userApi = {\r\n\r\n    getUsersApi(pageSize, currentPage=1) {\r\n        return (\r\n            instance.get(`users?count=${pageSize}&page=${currentPage}`).then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n    postUser(Userid) {\r\n        return (\r\n            instance.post(`follow/`+ Userid).then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n    deleteUser(Userid) {\r\n        return (\r\n            instance.delete(`follow/`+ Userid).then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n    getLoginName() {\r\n        return (\r\n            instance.get(`auth/me`).then(response => {\r\n                return response.data\r\n        })\r\n        )\r\n    },\r\n    getProfile(UserId) {\r\n        console.warn('старый метод')\r\n        return profileApi.getProfile(UserId)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const profileApi = {\r\n\r\n    getProfile(UserId) {\r\n        return (\r\n            instance.get(`profile/`+UserId).then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n    getProfileStatus(UserId) {\r\n        return (\r\n            instance.get(`profile/status/`+UserId).then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n    updateProfileStatus(status) {\r\n        return instance.put(`profile/status`, { status: status })\r\n    },\r\n    savePhoto(photoFile) {\r\n        var formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type':'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    updateProfile(formData) {\r\n        return instance.put(`profile/`, formData).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n}\r\n\r\nexport const loginApi = {\r\n\r\n    loginPost(email, password, rememberMe, captcha=null) {\r\n        return (\r\n            instance.post(`/auth/login`, {\r\n                email, password, rememberMe, captcha\r\n            }).then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n    logoutPost() {\r\n        return (\r\n            instance.delete(`/auth/login`).then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl () {\r\n        return instance.get(`security/get-captcha-url/`)\r\n    }\r\n}\r\n","import style from './../dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const DialogItem = (props) => {\r\n    return (\r\n        <div className=\"item\">\r\n            <NavLink to={\"/messages/\" + props.id } activeClassName={style.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n","export const Message = (props) => {\r\n    return (\r\n        <div className=\"message\">{props.message}</div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_spinner\":\"preloader_lds_spinner__2gOt3\",\"lds-ellipsis1\":\"preloader_lds-ellipsis1__1Xz7E\",\"lds-ellipsis2\":\"preloader_lds-ellipsis2__2kwIx\",\"lds-ellipsis3\":\"preloader_lds-ellipsis3__3O-Nl\"};","import {loginApi, securityAPI, userApi} from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst SET_USER_DATA = 'FOLLOW'\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n  //  isFetching: false\r\n}\r\n\r\nexport const authReduser = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n               // isAuth: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const getCaptchaAction = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload:{captchaUrl}\r\n})\r\n\r\n\r\n\r\nexport const setUserData = (userId, email, login, isAuth) => ({   type: SET_USER_DATA, payload:{userId, email, login, isAuth} })\r\n\r\n\r\nexport const userName = () => async (dispatch) => {\r\n    let response = await userApi.getLoginName() //возвращается промис\r\n\r\n    if(response.resultCode === 0){\r\n        let {email, id , login} = response.data;\r\n        dispatch(setUserData(id, email , login, true));\r\n    }\r\n}\r\n\r\nexport const userlogin = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n\r\n    let response = await loginApi.loginPost(email, password, rememberMe, captcha)\r\n\r\n    if(response.resultCode === 0){\r\n        dispatch(userName())\r\n    }\r\n    else {\r\n        if (response.resultCode === 10){\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        dispatch(stopSubmit(\"login\", {_error: response.messages}));\r\n    }\r\n}\r\n\r\n/*\r\nexport const userlogut = () => (dispatch) => {\r\n    loginApi.logoutPost().then(response => {\r\n        if(response.resultCode === 0){\r\n            dispatch(setUserData(null, null , null, false));\r\n        }\r\n    })\r\n}*/\r\n\r\nexport const userlogut = () => async (dispatch) => {\r\n    let response = await loginApi.logoutPost()\r\n\r\n    if(response.resultCode === 0){\r\n        dispatch(setUserData(null, null , null, false));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url\r\n\r\n    dispatch(getCaptchaAction(captchaUrl));\r\n\r\n}\r\n","export const requireField = value => {\r\n    if (value) return undefined\r\n    return 'Обязательное поле'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Максимальная длина ${maxLength} символов`\r\n    return undefined\r\n}\r\n","import {profileApi, userApi} from \"../api/api\";\r\nimport {authReduser, userName} from \"./authReducer\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst SAVE_PHOTO_SUCCES = 'SAVE_PHOTO_SUCCES'\r\n\r\nconst getRandomInt = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nlet initialStatedsasad = {\r\n    posts: [\r\n        {id: 1, message: 'Как дела?', like: getRandomInt(0, 120)},\r\n        {id: 2, message: 'Чем занят?', like: getRandomInt(0, 120)},\r\n        {id: 3, message: 'Займи 5000?', like: getRandomInt(0, 120)},\r\n        {id: 4, message: 'Отдам через неделю', like: getRandomInt(0, 120)},\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nexport const profileReducer = (state = initialStatedsasad, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.text,\r\n                like: getRandomInt(0, 120),\r\n            }\r\n            return {\r\n                ...state,\r\n                newPostText: \"\",\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        case DELETE_POST:\r\n            return {  ...state, posts: state.posts.filter(p => p.id != action.Postid) }\r\n        case SAVE_PHOTO_SUCCES:\r\n            return {  ...state, profile: { ...state.profile, photos: action.photos }}\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.setUserProfile}\r\n        case SET_STATUS:\r\n            return {...state, status: action.setUserStatus}\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = (text) => ({   type: ADD_POST, text: text })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, setUserProfile: profile })\r\nexport const setUserStatus = (userid) => ({ type: SET_STATUS, setUserStatus: userid })\r\nexport const deletePost = (Postid) => ({ type: DELETE_POST, Postid: Postid })\r\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCES, photos })\r\n\r\nexport const ProfileShow = (UserId) => async (dispatch) => {\r\n    let data = await userApi.getProfile(UserId)\r\n    dispatch(setUserProfile(data))\r\n}\r\n\r\nexport const StatusShow = (UserId) => async (dispatch) => {\r\n    let data = await  profileApi.getProfileStatus(UserId)\r\n    dispatch(setUserStatus(data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n        let data = await  profileApi.updateProfileStatus(status)\r\n        if(data.data.resultCode === 0){\r\n            dispatch(setUserStatus(status))\r\n        }\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let responce = await profileApi.savePhoto(file)\r\n    if(responce.data.resultCode === 0){\r\n        dispatch(savePhotoSuccess(responce.data.data.photos))\r\n    }\r\n}\r\nexport const saveProfile = (formData) => async (dispatch, getState) => {\r\n    const userId = getState().authReduser.userId\r\n    let responce = await profileApi.updateProfile(formData)\r\n    if(responce.resultCode === 0){\r\n        dispatch(ProfileShow(userId))\r\n    } else {\r\n       dispatch(stopSubmit(\"ReduxProfileForm\", {_error: responce.messages}));\r\n       return Promise.reject()\r\n    }\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.63466324.svg\";","import style from './header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {userlogut} from \"../../redux/authReducer\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\nexport const Header = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <header>\r\n            <a href=\"/\"><img src={logo} className={style.logo} alt=\"\"/></a>\r\n\r\n            {\r\n                (props.isAuth) ?\r\n                    <div className={style.loginBlock}>\r\n                        {props.login}\r\n                        <button onClick={props.userlogut}> Выйти </button>\r\n                    </div>\r\n                 :\r\n                    <div className={style.loginBlock}>\r\n                        <NavLink to={'/login'}>Авторизация</NavLink>\r\n                    </div>\r\n            }\r\n\r\n\r\n        </header>\r\n    );\r\n}","import './footer.css'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n             Футер\r\n        </footer>\r\n    );\r\n}","import style from './leftMenu.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const LeftMenu = () => {\r\n    return (\r\n        <div className={style.leftMenu}>\r\n             <ul>\r\n                 <li className={style.item}>\r\n                     <NavLink to=\"/profile\" activeClassName={style.active}>Профиль</NavLink>\r\n                 </li>\r\n                 <li className={style.item}>\r\n                     <NavLink to=\"/messages\" activeClassName={style.active}>Сообщения</NavLink>\r\n                 </li>\r\n                 <li className={style.item}>\r\n                     <NavLink to=\"/users\" activeClassName={style.active}>Пользователи</NavLink>\r\n                 </li>\r\n                 <li className={style.item}>\r\n                     <NavLink to=\"/study\" activeClassName={style.active}>Учеба</NavLink>\r\n                 </li>\r\n                 {/*<li>Найстройки</li>*/}\r\n                 <li><a href=\"https://onlinetimer.ru/#!/timer/2021-03-01T10:49:34.984Z/2021-03-01T08:47:45.266Z/forward/0/2/100/t/2021-03-01T11:59:25.799Z/\" target=\"_blank\">Таймер</a></li>\r\n             </ul>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './myPosts.css'\r\nimport {Post} from \"./Post/Post\";\r\nimport {Profile} from \"../profile/profile\";\r\nimport {Posts} from \"../myPosts/myPosts\";\r\nimport {addPostActionCreator, profileReducer, updateNewPostTextActionCreator} from \"../../redux/profileReducer\";\r\nimport StoreContext from \"../../StoreContext\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profileReducer.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (text) => {\r\n            let action = addPostActionCreator(text);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\n","import React from 'react'\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode : true,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeEditMode = () => {\r\n        this.setState({\r\n            editMode:false\r\n        })\r\n    }\r\n    deactivatedEditMode = () => {\r\n        this.setState({\r\n            editMode:true\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n\r\n            <>\r\n\r\n                <div>Мой статус</div>\r\n                <div>\r\n                    {this.state.editMode ? <span onDoubleClick={ this.activeEditMode }>{this.props.status}</span>\r\n                        : <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deactivatedEditMode } type=\"text\"\r\n                                 value={this.state.status || \"Изменить статус\"}/>   }\r\n\r\n                </div>\r\n\r\n\r\n                <br/><br/>\r\n\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProfileStatus","import React, {useState, useEffect} from 'react'\r\n\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n //   let [editMode, setEditMode] = useState({editMode: false, status: props.status});\r\n    let [editMode, setEditMode] = useState( false);\r\n    let [status, setStatus] = useState( props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activeEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivatedEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus( e.currentTarget.value )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>Мой статус</div>\r\n            <div>\r\n                { !editMode &&\r\n                    <span onDoubleClick={ activeEditMode }>{props.status}</span>\r\n                }\r\n                { editMode &&\r\n                    <input onChange={ onStatusChange }  autoFocus={true} onBlur={ deactivatedEditMode }  type=\"text\" value={ status || \"Изменить статус\"}/>\r\n                }\r\n            </div>\r\n            <br/><br/>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusHooks","export default __webpack_public_path__ + \"static/media/topimg.1efb9bff.jpg\";","import style from './profile.module.css'\r\nimport {Posts} from \"../myPosts/myPosts\";\r\nimport {MyPostsContainer} from \"../myPosts/myPostsContainer\";\r\nimport ProfileStatus from \"./profileStatus\";\r\nimport ProfileStatusHooks from \"./profileStatusHooks\";\r\nimport topimg from \"../../assets/images/topimg.jpg\";\r\n\r\nexport const Profile = ({status, updateStatus, profile, isowner, savePhoto, saveProfile}) => {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className={style.topimg}>\r\n                <img src={topimg} alt=\"\"/>\r\n            </div>\r\n\r\n            <div className={style.content}>\r\n\r\n                <ProfileStatusHooks status={status} updateStatus={updateStatus} />\r\n\r\n\r\n\r\n                 Мой профиль <br/><br/>\r\n\r\n                 <MyPostsContainer savePhoto={savePhoto}  saveProfile={saveProfile} isowner={isowner} profile={profile}/>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","\r\n\r\nexport const updateObjectInArray = (items, userId, objPropName, newObjProps) => {\r\n\r\n    return items.map( user => {\r\n    //  if(user.id === userId) {\r\n    if(user.[objPropName] === userId) {\r\n        //return { ...user, followed: true}\r\n        return { ...user, ...newObjProps}\r\n    }\r\n    return user\r\n    })\r\n\r\n}","import {userApi} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst TOOGLE_FOLLOWIN_PROGRESS = 'TOOGLE_FOLLOWIN_PROGRESS'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_USER_COUNT = 'SET_USER_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\n\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n}\r\n\r\nexport const usersReducerNew = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return { ...state, users: [...action.users]}\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage}\r\n        case SET_USER_COUNT:\r\n            return { ...state, totalUsersCount: action.countUsers}\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching}\r\n        case FOLLOW:\r\n            return {\r\n                    ...state,\r\n                    users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n/*                    users: state.users.map( user => {\r\n                        if(user.id === action.userId) {\r\n                            return { ...user, followed: true}\r\n                        }\r\n                        return user\r\n                    })*/\r\n                }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n/*                users: state.users.map( user => {\r\n                    if(user.id === action.userId) {\r\n                        return { ...user, followed: false}\r\n                    }\r\n                    return user\r\n                })*/\r\n            }\r\n        case TOOGLE_FOLLOWIN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [ ...state.followingInProgress, action.userId  ]\r\n                    : [ ...state.followingInProgress.filter(id => id != action.userId) ]\r\n\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const follow = (userId) => ({   type: FOLLOW, userId })\r\nexport const unfollow = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const toogleFollowingInProgress = (followingInProgress, userId) => ({ type: TOOGLE_FOLLOWIN_PROGRESS, followingInProgress, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const currentPageClick = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUserCOunt = (countUsers) => ({ type: SET_USER_COUNT, countUsers })\r\nexport const setIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\n\r\nexport const getUsersThunk = (pageSize, currentPage) => async (dispatch) => {\r\n\r\n    dispatch(setIsFetching(true));\r\n\r\n\r\n    let data = await userApi.getUsersApi(pageSize, currentPage)\r\n    dispatch(currentPageClick(currentPage))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUserCOunt(data.totalCount))\r\n    dispatch(setIsFetching(false));\r\n}\r\n/*\r\nexport const postUsersThunk = (id) => async (dispatch) => {\r\n    dispatch(toogleFollowingInProgress(true, id))\r\n\r\n    let data =  await userApi.postUser(id)\r\n    if(data.resultCode === 0){\r\n        dispatch(follow(id))\r\n    }\r\n    dispatch(toogleFollowingInProgress(false, id))\r\n}\r\n\r\nexport const deleteUsersThunk = (id) => async (dispatch) => {\r\n    dispatch(toogleFollowingInProgress(true, id))\r\n    let data = await userApi.deleteUser(id)\r\n    if(data.resultCode === 0){\r\n        dispatch(unfollow(id))\r\n    }\r\n    dispatch(toogleFollowingInProgress(false, id))\r\n}*/\r\n\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n\r\n    dispatch(toogleFollowingInProgress(true, id))\r\n\r\n    let data = await apiMethod(id)\r\n    if(data.resultCode === 0){\r\n        dispatch(actionCreator(id))\r\n    }\r\n    dispatch(toogleFollowingInProgress(false, id))\r\n}\r\n\r\nexport const postUsersThunk = (id) => async (dispatch) => {\r\n    let apiMethod = userApi.postUser(id)\r\n    let actionCreator = follow;\r\n    followUnfollowFlow(dispatch, id, userApi.postUser.bind(id), follow)\r\n}\r\n\r\nexport const deleteUsersThunk = (id) => async (dispatch) => {\r\n    let apiMethod = userApi.deleteUser.bind(id)\r\n    let actionCreator = unfollow;\r\n    followUnfollowFlow(dispatch, id, apiMethod, actionCreator)\r\n}\r\n\r\n\r\n\r\n","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersReducer.users;\r\n}\r\n\r\n//export const getUsersSuperSelector = createSelector(getUsers, getIsFetching, (users, isFetching) => {\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersReducer.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersReducer.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersReducer.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersReducer.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersReducer.followingInProgress;\r\n}\r\n","import React from 'react'\r\nimport style from \"../users/users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport * as axios from \"axios\";\r\nimport {userApi} from \"../../api/api\";\r\nimport {Button} from \"antd\";\r\nimport {\r\n    deleteUsersThunk,\r\n    follow,\r\n    getUsersThunk,\r\n    postUsersThunk,\r\n    Testunfollow,\r\n    toogleFollowingInProgress,\r\n    unfollow\r\n} from \"../../redux/userReducer\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersSuperSelector\r\n} from \"../../redux/userSelector\";\r\n/*\r\n\r\nexport const Paginator = ({totalUsersCount, pageSize, onPageClick, currentPage}) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages = []\r\n    for (let i=1; i<= pagesCount; i++ ){\r\n        if(i>20) break;\r\n        pages.push(i)\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState({activePage: pageNumber});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                pages.map(pag => {\r\n                    return <span onClick={ (e) => { onPageClick(pag)}  } className={currentPage === pag && style.bold}>{pag}</span>\r\n                })\r\n            }\r\n\r\n\r\n\r\n            <div>Всего страниц: { pagesCount }</div>\r\n            <Pagination\r\n                activePage={this.state.activePage}\r\n                itemsCountPerPage={10}\r\n                totalItemsCount={450}\r\n                pageRangeDisplayed={5}\r\n                onChange={this.handlePageChange.bind(this)}\r\n            />\r\n        </div>\r\n    )\r\n}*/\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        currentPage: getCurrentPage(state),\r\n    }\r\n}\r\n\r\nexport class PaginatorComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activePage: this.currentPage\r\n        };\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState({activePage: pageNumber});\r\n        this.props.onPageClick(pageNumber)\r\n    }\r\n\r\n    render() {\r\n\r\n        let {totalUsersCount, pageSize, onPageClick, currentPage} = this.props;\r\n\r\n        let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n        return (\r\n            <div>\r\n                <Pagination\r\n                    activePage={currentPage}\r\n                    itemsCountPerPage={10}\r\n                    totalItemsCount={totalUsersCount}\r\n                    pageRangeDisplayed={10}\r\n                    itemClass=\"page-item\"\r\n                    linkClass=\"page-link\"\r\n                    onChange={this.handlePageChange.bind(this)}\r\n                />\r\n\r\n                <div>Всего страниц: {pagesCount}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Paginator = compose(connect(mapStateToProps, { }))(PaginatorComponent)\r\n","import React from 'react'\r\nimport style from \"./users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport * as axios from \"axios\";\r\nimport {userApi} from \"../../api/api\";\r\nimport {Button} from \"antd\";\r\nimport {Testunfollow} from \"../../redux/userReducer\";\r\nimport {Paginator} from \"../Paginator/paginator\";\r\nimport avanone from \"../../assets/images/avanone.webp\";\r\n\r\nlet User = ({user, deleteUsersThunk, postUsersThunk, followingInProgress}) => {\r\n\r\n    return (\r\n            <div className={style.block} key={user.id}>\r\n                <div className={style.buttonFriends}>\r\n                    { user.followed ? <Button disabled={followingInProgress.some(id => id === user.id)} onClick={ () => {\r\n                            deleteUsersThunk(user.id)\r\n                    }\r\n                    } > UnFollow </Button> : <Button disabled={followingInProgress.some(id => id === user.id)} onClick={ () => {\r\n                            postUsersThunk(user.id)\r\n                       }\r\n                    } > Follow </Button>}\r\n                </div>\r\n                <div className={style.userprofile}>\r\n                    <NavLink to={ '/profile/'+ user.id }><div className={style.avatar}>{user.photos.small === null ? <img src={avanone} alt=\"\"/> : <img src={user.photos.small} alt=\"\"/>}</div></NavLink>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react'\r\nimport style from \"./users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport * as axios from \"axios\";\r\nimport {userApi} from \"../../api/api\";\r\nimport {Button} from \"antd\";\r\nimport {Testunfollow} from \"../../redux/userReducer\";\r\nimport {Paginator} from \"../Paginator/paginator\";\r\nimport User from \"./user\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageClick, followingInProgress, deleteUsersThunk, postUsersThunk, ...props}) => {\r\n\r\n    return (\r\n        <div>\r\n            Пользователи: <br/><br/>\r\n            <div className={style.pagination} >\r\n\r\n       {/*         {\r\n                    pages.map(pag => {\r\n                        return <span onClick={ (e) => { props.onPageClick(pag)}  } className={props.currentPage === pag && style.bold}>{pag}</span>\r\n                    })\r\n                }*/}\r\n\r\n                <Paginator currentPage={currentPage} totalUsersCount={totalUsersCount} onPageClick={onPageClick} pageSize={pageSize} />\r\n\r\n            </div>\r\n\r\n            {\r\n                props.users.map(user => <User user={user} key={user.id} followingInProgress={followingInProgress} deleteUsersThunk={deleteUsersThunk} postUsersThunk={postUsersThunk} />)\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    deleteUsersThunk,\r\n    follow, getUsersThunk, postUsersThunk,\r\n    toogleFollowingInProgress,\r\n    unfollow,\r\n} from \"../../redux/userReducer\";\r\nimport Users from \"./users\";\r\nimport style from \"./users.module.css\";\r\nimport Preloader from \"../Preloader/preloader\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {Dialogs} from \"../dialogs/dialogs\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers, getUsersSuperSelector\r\n} from \"../../redux/userSelector\";\r\n\r\n/*let  mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersReducer.users,\r\n        pageSize: state.usersReducer.pageSize,\r\n        totalUsersCount: state.usersReducer.totalUsersCount,\r\n        currentPage: state.usersReducer.currentPage,\r\n        isFetching: state.usersReducer.isFetching,\r\n        followingInProgress: state.usersReducer.followingInProgress\r\n    }\r\n}*/\r\n\r\n\r\n\r\nclass UserContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        //this.props.getUsersThunk() //так пересылаются все пропсы\r\n        const {pageSize, currentPage} = this.props\r\n        this.props.getUsersThunk(pageSize, currentPage)\r\n    }\r\n\r\n    onPageClick = (pageNumber) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsersThunk(pageSize, pageNumber)\r\n    }\r\n\r\n\r\n    render() {\r\n        return  <>\r\n\r\n            {this.props.isFetching ? <Preloader />: null}\r\n\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageClick={this.onPageClick}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                postUsersThunk={this.props.postUsersThunk}\r\n                postDeleteUsersThunk={this.props.postDeleteUsersThunk}\r\n                deleteUsersThunk={this.props.deleteUsersThunk}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n                toogleFollowingInProgress={this.props.toogleFollowingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet  mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport const UsersContainer = compose(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        toogleFollowingInProgress,\r\n        getUsersThunk,\r\n        postUsersThunk,\r\n        deleteUsersThunk\r\n    })\r\n)(UserContainer)\r\n/*\r\n\r\nexport const UsersContainer = connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    toogleFollowingInProgress,\r\n    getUsersThunk,\r\n    postUsersThunk,\r\n    deleteUsersThunk\r\n    })(UserContainer);\r\n*/\r\n","import React from \"react\"\r\nimport {Header} from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport {userlogut, userName} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n        this.props.userName()\r\n    }\r\n\r\n    render() {\r\n        return <Header { ...this.props }/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.authReduser.isAuth,\r\n    login: state.authReduser.login,\r\n    email: state.authReduser.email\r\n});\r\n\r\nexport default connect(mapStateToProps, {userName, userlogut})(HeaderContainer);\r\n","import React from 'react'\r\nimport style from './FormControl.module.css'\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError =  meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={ hasError && style.error}>\r\n            { hasError && <div><span>{meta.error}</span></div>}\r\n            <input { ...input } { ...props } />\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport {Button, Checkbox} from \"antd\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {authReduser, userlogin} from \"../../redux/authReducer\";\r\nimport {Input} from \"../../components/FormControls/Input\";\r\nimport {requireField} from \"../../utils/validator\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../../components/FormControls/FormControl.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit,error, captchaUrl}) => {\r\n\r\n    return (\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Field component={Input} validate={[requireField]} name={\"login\"} type=\"text\" placeholder={\"Логин\"}/>\r\n                </div>\r\n                <div>\r\n                    <Field component={Input} validate={[requireField]} name={\"password\"} type=\"password\" placeholder={\"Пароль\"}/>\r\n                </div>\r\n                <div>\r\n                    <Field component={\"input\"} type={\"checkbox\"} name={\"rememberMe\"} /> Запомнить меня\r\n                </div>\r\n                {error && < div className={style.formError}>\r\n                    {error}\r\n                    </div>\r\n                }\r\n\r\n                {\r\n                    captchaUrl\r\n                    ? <>\r\n                        <img src={captchaUrl} />\r\n                        <Field component={Input} validate={[requireField]} name={\"captcha\"} type=\"text\" placeholder={\"captcha\"}/>\r\n                     </>\r\n                    : null\r\n                }\r\n\r\n                <div>\r\n                    <button>Войти</button>\r\n                </div>\r\n            </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.userlogin(formData.login, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div> <br/> <br/>\r\n            <a href=\"https://social-network.samuraijs.com/\" target=\"_blank\"> Авторизоваться </a> <br/><br/>\r\n\r\n            {<LoginReduxForm captchaUrl={props.captchaUrl} onSubmit={onSubmit} />}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.authReduser.captchaUrl,\r\n    isAuth: state.authReduser.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {userlogin})(Login);","import {loginApi, userApi} from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form'\r\nimport {userName} from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED'\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nexport const appReduser = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setInitialized = () => ({ type: SET_INITIALIZED })\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise  = dispatch(userName());\r\n    //dispatch(someDataData());\r\n\r\n    Promise.all([promise]).then( () => {\r\n        dispatch(setInitialized());\r\n    })\r\n\r\n\r\n\r\n}\r\n\r\n//export default appReduser","import React from \"react\"\r\nimport {Profile} from \"./profile\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    ProfileShow,\r\n    savePhoto,\r\n    saveProfile,\r\n    setUserProfile,\r\n    StatusShow,\r\n    updateStatus\r\n} from \"../../redux/profileReducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {userApi} from \"../../api/api\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {Dialogs} from \"../dialogs/dialogs\";\r\nimport {compose} from \"redux\";\r\nimport {authReduser} from \"../../redux/authReducer\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refrashProfile() {\r\n        let UserId = this.props.match.params.userId;\r\n        if(!UserId){\r\n            //UserId=15570\r\n            UserId=this.props.userIdMy\r\n            if(!UserId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.ProfileShow(UserId);\r\n        this.props.StatusShow(UserId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refrashProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId != prevProps.match.params.userId){\r\n            this.refrashProfile()\r\n        }\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n            <Profile savePhoto={this.props.savePhoto} {...this.props} isowner={!this.props.match.params.userId} profile={this.props.profile} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profileReducer.profile,\r\n    status: state.profileReducer.status,\r\n    userIdMy: state.authReduser.userId,\r\n    isAuth: state.authReduser.isAuth,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, ProfileShow, StatusShow, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer)","import React from 'react'\r\nimport classes from './timeStudy.module.css'\r\nimport cn from 'classnames'\r\n\r\nexport const VisibleTime = (props) => {\r\n    return (\r\n        <div className=\"item\">\r\n            {props.dateState} - {props.timeState} - {props.study}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TimeStudy = () => {\r\n\r\n    let arrTime = [\r\n        {id: '0', 'date': '28.02.2021', 'time': '02:50:00', 'study': 'React 1 рок'},\r\n        {id: '1', 'date': '01.03.2021', 'time': '03:45:38', 'study': 'React 25 урок'},\r\n        {id: '2', 'date': '02.03.2021', 'time': '03:15:05', 'study': 'React 35 урок'},\r\n        {id: '3', 'date': '03.03.2021', 'time': '06:26:28', 'study': 'React 40 урок'},\r\n        {id: '4', 'date': '04.03.2021', 'time': '05:48:10', 'study': 'React 49 урок'},\r\n        {id: '5', 'date': '05.03.2021', 'time': '03:02:08', 'study': 'React 55 урок'},\r\n        {id: '6', 'date': '06.03.2021', 'time': '04:11:51', 'study': 'React 59 урок'},\r\n        {id: '7', 'date': '07.03.2021', 'time': '06:08:03', 'study': 'React 63 урок'},\r\n        {id: '8', 'date': '08.03.2021', 'time': '01:41:00', 'study': 'React 65 урок'},\r\n        {id: '9', 'date': '09.03.2021', 'time': '03:11:07', 'study': 'React 68 урок'},\r\n        {id: '10', 'date': '10.03.2021', 'time': '03:13:04', 'study': 'React 72 урок'},\r\n        {id: '11', 'date': '11.03.2021', 'time': '02:03:04', 'study': 'React 74 урок'},\r\n        {id: '12', 'date': '12.03.2021', 'time': '03:29:15', 'study': 'React 77 урок'},\r\n        {id: '13', 'date': '13.03.2021', 'time': '01:51:05', 'study': 'React 79 урок'},\r\n        {id: '14', 'date': '14.03.2021', 'time': '02:13:25', 'study': 'React 81 урок'},\r\n        {id: '15', 'date': '15.03.2021', 'time': '05:31:07', 'study': 'React 89 урок'},\r\n        {id: '16', 'date': '16.03.2021', 'time': '06:36:30', 'study': 'React 94 урок'},\r\n        {id: '17', 'date': '17.03.2021', 'time': '06:28:18', 'study': 'React 95 урок, udemy 7 урок'},\r\n        {id: '18', 'date': '18.03.2021', 'time': '03:38:18', 'study': 'React 97 урок'},\r\n        {id: '19', 'date': '19.03.2021', 'time': '05:42:15', 'study': 'React 97 урок, udemy 39 урок'},\r\n        {id: '20', 'date': '20.03.2021', 'time': '02:41:46', 'study': 'React 97 урок, udemy 41 урок'},\r\n        {id: '21', 'date': '21.03.2021', 'time': '03:46:44', 'study': 'React 98 урок, udemy 53 урок'},\r\n        {id: '22', 'date': '22.03.2021', 'time': '05:23:52', 'study': 'React 98 урок, udemy 73 урок'},\r\n        {id: '23', 'date': '23.03.2021', 'time': '05:12:23', 'study': 'React 98 урок, udemy 87 урок'},\r\n        {id: '24', 'date': '24.04.2021', 'time': '06:25:18', 'study': 'React 98 урок, udemy 102 урок'},\r\n        {id: '25', 'date': '25.04.2021', 'time': '05:05:27', 'study': 'React 98 урок, udemy 109 урок'},\r\n        {id: '26', 'date': '26.04.2021', 'time': '08:49:53', 'study': 'React 98 урок, udemy 109 урок, настрйока сервера'},\r\n        {id: '27', 'date': '27.04.2021', 'time': '02:36:55', 'study': 'React 99 урок, udemy 109 урок'},\r\n    ]\r\n\r\n    let arrTimeVisible = arrTime.map( item => (<VisibleTime dateState={item.date} key={item.id} timeState={item.time} study={item.study} />));\r\n\r\n\r\n    function SEcondTime(str) {\r\n        let massTime = str.split(':');\r\n\r\n        let h = Number(massTime[0]);\r\n        let m = Number(massTime[1]);\r\n        let s = Number(massTime[2]);\r\n\r\n        let sec = (h * 60 * 60) + m * 60 + s;\r\n        return sec;\r\n    }\r\n\r\n    let col = 0;\r\n    let time = \"\";\r\n    let allTime = \"\";\r\n\r\n    while(col<arrTime.length) {\r\n        time = SEcondTime(arrTime[col].time);\r\n        allTime = +time + +allTime;\r\n        col++;\r\n    }\r\n\r\n    let seconds = parseInt(allTime, 10);\r\n\r\n    let days = Math.floor(seconds / (3600*24));\r\n    seconds  -= days*3600*24;\r\n    let hrs   = Math.floor(seconds / 3600);\r\n    seconds  -= hrs*3600;\r\n    let mnts = Math.floor(seconds / 60);\r\n    seconds  -= mnts*60;\r\n\r\n    if(String(mnts).length==1){mnts = \"0\" + mnts }\r\n    if(String(hrs).length==1){hrs = \"0\" + hrs }\r\n\r\n    let TimeDay = days+\" дней, \"+hrs+\":\"+mnts+\":\"+seconds;\r\n\r\n    return (\r\n        <div>\r\n            Время учебы: <br/>\r\n\r\n            {arrTimeVisible}\r\n\r\n            <div className={cn(classes.timeStudy, classes.color)}>\r\n                Полное время: {TimeDay}\r\n               <div>Время в часах: { +days*24 + +hrs}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport {TimeStudy} from \"../../components/timeStudy/timeStudy\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../components/hoc/withAuthRedirect\";\r\n\r\nconst Study = () => {\r\n\r\n    return (\r\n          <div>\r\n              <TimeStudy /> <br/> <br/>\r\n          </div>\r\n    );\r\n}\r\n\r\nexport default compose(withAuthRedirect)(Study)\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Component} from \"react\";\r\nimport './App.css';\r\nimport {Header} from \"./components/header/header\";\r\nimport {Footer} from \"./components/footer/footer\";\r\nimport {LeftMenu} from \"./components/leftMenu/leftMenu\";\r\nimport {Profile} from \"./components/profile/profile\";\r\nimport {Dialogs} from \"./components/dialogs/dialogs\";\r\nimport {HashRouter, BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport {UsersContainer} from \"./components/users/usersContainer\";\r\nimport HeaderContainer from \"./components/header/headerContainer\";\r\nimport Login from \"./pages/login/login\";\r\nimport {connect} from \"react-redux\";\r\nimport {userlogut, userName} from \"./redux/authReducer\";\r\nimport Preloader from \"./components/Preloader/preloader\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\n\r\nimport ProfileContainer from \"./components/profile/profileContainer\";\r\nimport {withSuspense} from \"./components/hoc/withSuspense\";\r\nimport Study from \"./pages/study/study\";\r\nconst DialogsConteiner = React.lazy( () => import(\"./components/dialogs/dialogsContainer\"));\r\n\r\nclass App extends Component {\r\n\r\n    catchAllUnhandledErrors = (promiseRejectionEvent) => {\r\n        alert (\"Ну какая то ошибка, хз.\")\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors) //обрабоктка всех ошибок\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    render() {\r\n\r\n        if(!this.props.initialized) {\r\n            return (\r\n                <Preloader />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <HashRouter>\r\n                <div className=\"App\">\r\n                    <HeaderContainer/>\r\n                    <LeftMenu/>\r\n                    <div className=\"content\">\r\n                        <Switch>\r\n                            <Route exact path=\"/\" render={() => <ProfileContainer/>}/>\r\n                            <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                            <Route path=\"/messages\" render={withSuspense(DialogsConteiner)}/>\r\n                            <Route path=\"/users\" render={() => <UsersContainer/>}/>\r\n                            <Route path=\"/study\" render={() => <Study/>}/>\r\n                            <Route path=\"/login\" render={() => <Login/>}/>\r\n                            <Route path=\"*\" render={() => <div>404</div>}/>\r\n                        </Switch>\r\n                    </div>\r\n                    <Footer/>\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    initialized: state.appReduser.initialized,\r\n});\r\n\r\nexport default connect(mapStateToProps, {initializeApp})(App);\r\n\r\n","import {Redirect} from \"react-router-dom\";\r\nimport {Dialogs} from \"../dialogs/dialogs\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Preloader from \"../Preloader/preloader\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.authReduser.isAuth\r\n    }\r\n}\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n        return (props) => {\r\n            return <React.Suspense fallback={<Preloader />}>\r\n                <Component { ...props } />\r\n            </React.Suspense>\r\n        }\r\n\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {messageReducer} from \"./messagesReduser\";\r\nimport {usersReducer, usersReducerNew} from \"./userReducer\";\r\nimport {authReduser} from \"./authReducer\";\r\nimport thunkMiddlewaer from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport {appReduser} from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profileReducer,\r\n    messageReducer,\r\n    usersReducer: usersReducerNew,\r\n    authReduser,\r\n    appReduser,\r\n    form: formReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // плагин для хрома\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddlewaer)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddlewaer));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/redux-store'\r\nimport StoreContext from './StoreContext'\r\nimport {Provider} from \"react-redux\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftMenu\":\"leftMenu_leftMenu__1p43Y\",\"active\":\"leftMenu_active__4zMtW\",\"item\":\"leftMenu_item__3n5RH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"users_avatar__21mF8\",\"bold\":\"users_bold__3q12B\",\"pagination\":\"users_pagination__169Bh\",\"block\":\"users_block__2Or8p\",\"buttonFriends\":\"users_buttonFriends__3tEdN\",\"userprofile\":\"users_userprofile__3N1Z1\"};","import style from \"./preloader.module.css\";\r\n\r\nconst Preloader = () => {\r\n    return (<div className={style.lds_spinner}><div></div><div></div><div></div><div></div></div>)\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControl_error__3t8bW\",\"formError\":\"FormControl_formError__1GEfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"dialogs_content__5QLkx\",\"dislogs\":\"dialogs_dislogs__3fWn_\",\"dialog_items\":\"dialogs_dialog_items__KMhuT\",\"messanges\":\"dialogs_messanges__2dqMB\",\"active\":\"dialogs_active__kfK57\"};","import React from 'react';\r\nimport style from './dialogs.module.css'\r\nimport {DialogItem} from \"./Dialogitem/dialogitem\";\r\nimport {Message} from \"./Message/message\";\r\nimport {\r\n    addMessageActionCreator, messageReducer,\r\n    updateNewMessageTextActionCreator,\r\n} from \"../../redux/messagesReduser\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../FormControls/Textarea\";\r\nimport {maxLengthCreator, requireField} from \"../../utils/validator\";\r\n\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst DialogForm = (props) => {\r\n\r\n   return (\r\n       <form onSubmit={props.handleSubmit}>\r\n           <Field component={Textarea} validate={[requireField, maxLength100]} name={\"textarea\"} placeholder={\"введите сообщение\"} />\r\n           <button>Отправить</button>\r\n       </form>\r\n   )\r\n}\r\n\r\nconst DialogReduxForm = reduxForm({\r\n    form: 'dialog'\r\n})(DialogForm)\r\n\r\nexport const Dialogs = (props) => {\r\n\r\n\r\n    let newDialogData = props.dialogs.map(dialog => (<DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>))\r\n    let newMessangesData = props.messages.map(dialog => (<Message key={dialog.id} message={dialog.message} />))\r\n\r\n    const addNewMessage = (formData) => {\r\n        props.addMessage(formData.textarea)\r\n        formData.textarea = \"\"\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            Сообщения <br/><br/>\r\n            <div className={style.dislogs}>\r\n\r\n                <div className={style.dialog_items}>\r\n                    {newDialogData}\r\n                </div>\r\n\r\n                <div className={style.messanges} >\r\n                    {newMessangesData}\r\n\r\n                    <DialogReduxForm onSubmit={addNewMessage}/>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport style from './FormControl.module.css'\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError =  meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={ hasError ? style.error : \"\"}>\r\n            { hasError && <div><span>{meta.error}</span></div>}\r\n            <textarea { ...input } { ...props }></textarea>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import {Redirect} from \"react-router-dom\";\r\nimport {Dialogs} from \"../dialogs/dialogs\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n\r\n    return {\r\n        isAuth: state.authReduser.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n\r\n        const redirectComponet = (props) => {\r\n            if(!props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...props} />\r\n        }\r\n\r\n        let AuthRedirectComponent = connect(mapStateToPropsForRedirect)(redirectComponet)\r\n\r\n        return AuthRedirectComponent;\r\n\r\n}","export default __webpack_public_path__ + \"static/media/avanone.95bf63c3.webp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"header_logo__35lb_\",\"loginBlock\":\"header_loginBlock__1o6o4\"};"],"sourceRoot":""}