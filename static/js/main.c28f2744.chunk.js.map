{"version":3,"sources":["components/myPosts/myPosts.js","redux/messagesReduser.js","assets/images/ava.webp","components/myPosts/Post/Post.js","components/profile/profile.module.css","StoreContext.js","components/dialogs/Dialogitem/dialogitem.js","components/dialogs/Message/message.js","components/Preloader/preloader.module.css","api/api.js","redux/authReducer.js","assets/images/logo.svg","components/header/header.js","components/footer/footer.js","components/leftMenu/leftMenu.js","components/timeStudy/timeStudy.js","components/myPosts/myPostsContainer.js","components/profile/profileStatus.js","components/profile/profileStatusHooks.js","assets/images/topimg.jpg","components/profile/profile.js","utils/object-helpers.js","redux/userReducer.js","redux/userSelector.js","components/Paginator/paginator.js","assets/images/avanone.webp","components/users/user.js","components/users/users.js","components/users/usersContainer.js","components/header/headerContainer.js","components/FormControls/Input.js","pages/login/login.js","redux/appReducer.js","components/profile/profileContainer.js","App.js","components/hoc/withSuspense.js","reportWebVitals.js","redux/redux-store.js","index.js","redux/profileReducer.js","components/users/users.module.css","utils/validator.js","components/dialogs/dialogs.module.css","components/Preloader/preloader.js","components/leftMenu/leftMenu.module.css","components/FormControls/FormControl.module.css","components/dialogs/dialogs.js","components/FormControls/Textarea.js","components/header/header.module.css"],"names":["maxLength10","maxLengthCreator","WallReduxForm","reduxForm","form","props","onSubmit","handleSubmit","validate","requireField","component","Textarea","name","placeholder","Posts","React","memo","console","log","profile","newPostsData","posts","map","post","message","like","id","src","photos","large","alt","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","vk","formData","addPost","textarea","ADD_MESSAGE","initialState","messages","dialogs","messageReducer","state","action","type","newMessage","newText","addMessageActionCreator","text","Post","className","ava","module","exports","DialogItem","to","activeClassName","style","active","Message","instance","axios","baseURL","withCredentials","headers","userApi","getUsersApi","pageSize","currentPage","get","then","response","data","postUser","Userid","deleteUser","delete","getLoginName","getProfile","UserId","warn","profileApi","getProfileStatus","updateProfileStatus","status","put","loginApi","loginPost","email","password","rememberMe","logoutPost","SET_USER_DATA","userId","login","isAuth","authReduser","payload","setUserData","userName","dispatch","a","resultCode","userlogin","stopSubmit","_error","userlogut","Header","href","logo","loginBlock","onClick","Footer","LeftMenu","leftMenu","item","target","VisibleTime","dateState","timeState","study","TimeStudy","arrTime","arrTimeVisible","date","time","SEcondTime","str","massTime","split","Number","col","allTime","length","seconds","parseInt","days","Math","floor","hrs","mnts","String","TimeDay","MyPostsContainer","connect","profileReducer","addPostActionCreator","Component","ProfileStatusHooks","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","Profile","topimg","content","updateObjectInArray","items","objPropName","newObjProps","user","FOLLOW","UNFOLLOW","TOOGLE_FOLLOWIN_PROGRESS","SET_USERS","SET_CURRENT_PAGE","SET_USER_COUNT","TOGGLE_IS_FETCHING","users","totalUsersCount","isFetching","followingInProgress","follow","unfollow","toogleFollowingInProgress","setUsers","currentPageClick","setIsFetching","followUnfollowFlow","apiMethod","actionCreator","getUsersSuperSelector","createSelector","usersReducer","filter","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","PaginatorComponent","activePage","pageNumber","this","setState","onPageClick","pagesCount","ceil","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","itemClass","linkClass","handlePageChange","bind","Paginator","compose","User","deleteUsersThunk","postUsersThunk","block","buttonFriends","followed","disabled","some","userprofile","avatar","small","avanone","Users","pagination","UserContainer","getUsersThunk","postDeleteUsersThunk","UsersContainer","countUsers","totalCount","HeaderContainer","Input","input","meta","hasError","touched","error","LoginReduxForm","Field","formError","SET_INITIALIZED","initialized","ProfileContainer","match","params","userIdMy","history","push","ProfileShow","StatusShow","setUserProfile","withRouter","DialogsConteiner","lazy","App","initializeApp","exact","path","render","Suspense","fallback","appReduser","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddlewaer","__store__","ReactDOM","document","getElementById","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","getRandomInt","min","max","random","initialStatedsasad","newPost","newPostText","p","Postid","setUserStatus","userid","maxLength","Preloader","lds_spinner","maxLength100","DialogReduxForm","Dialogs","newDialogData","dialog","newMessangesData","dislogs","dialog_items","messanges","addMessage"],"mappings":"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","file":"static/js/main.c28f2744.chunk.js","sourcesContent":["import React from 'react';\r\nimport './myPosts.css'\r\nimport {Post} from \"./Post/Post\";\r\nimport Preloader from \"../Preloader/preloader\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requireField} from \"../../utils/validator\";\r\nimport {Textarea} from \"../FormControls/Textarea\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst FormPost = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field validate={[requireField, maxLength10]} component={Textarea} name={\"textarea\"}  placeholder={\"введите сообщение\"} />\r\n            <button>Отправить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst WallReduxForm = reduxForm({\r\n    form: 'wall'\r\n})(FormPost)\r\n\r\nexport const Posts = React.memo (props => {\r\n\r\n    console.log(\"sdfsf\")\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    let newPostsData = props.posts.map(post => (\r\n        <Post message={post.message} key={post.id} like={post.like}/>))\r\n\r\n    const onSubmit = (formData) => {\r\n        props.addPost(formData.textarea)\r\n        formData.textarea = \"\"\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Мои посты <br/><br/>\r\n\r\n            Аватар <br/>\r\n            <img src={props.profile.photos.large} alt=\"\"/><br/>\r\n            Имя: {props.profile.fullName}<br/>\r\n            Обо мне: {props.profile.aboutMe}<br/>\r\n            Ищет работу: {props.profile.lookingForAJob ? <span>Да</span> : <span>Нет</span>} <br/>\r\n            О работе: {props.profile.lookingForAJobDescription} <br/>\r\n            Контакты: {props.profile.contacts.vk}\r\n\r\n            <br/><br/><br/>\r\n            <div>Новый пост</div>\r\n            {<WallReduxForm onSubmit={onSubmit}/>}\r\n            {newPostsData}\r\n        </div>\r\n    );\r\n})\r\n","const ADD_MESSAGE = 'ADD-MESSAGE'\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Привет'},\r\n        {id: 2, message: 'Завтра едем смотреть динозавров'},\r\n        {id: 3, message: 'В эко парк'},\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Маша'},\r\n        {id: 2, name: 'Антон'},\r\n        {id: 3, name: 'Ванька'},\r\n        {id: 4, name: 'Танька'},\r\n    ]\r\n}\r\n\r\nexport const messageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id: 5,\r\n                message: action.newText,\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addMessageActionCreator = (text) => ({   type: ADD_MESSAGE, newText: text })","export default __webpack_public_path__ + \"static/media/ava.30f12791.webp\";","import './Post.css'\r\nimport ava from \"../../../assets/images/ava.webp\";\r\n\r\nexport const Post = (props) => {\r\n    return (\r\n        <div className=\"item\">\r\n            <div className=\"img\"><img src={ava} alt=\"\"/></div>\r\n            <div className=\"text\">{props.message }</div>\r\n            <div className=\"like\">{props.like } like</div>\r\n        </div>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topimg\":\"profile_topimg__Vcfz3\",\"content\":\"profile_content__3QBdM\"};","import React from 'react'\r\n\r\nconst StoreContext = React.createContext(null);\r\n\r\nexport default StoreContext;","import style from './../dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const DialogItem = (props) => {\r\n    return (\r\n        <div className=\"item\">\r\n            <NavLink to={\"/messages/\" + props.id } activeClassName={style.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n","export const Message = (props) => {\r\n    return (\r\n        <div className=\"message\">{props.message}</div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_spinner\":\"preloader_lds_spinner__2gOt3\",\"lds-ellipsis1\":\"preloader_lds-ellipsis1__1Xz7E\",\"lds-ellipsis2\":\"preloader_lds-ellipsis2__2kwIx\",\"lds-ellipsis3\":\"preloader_lds-ellipsis3__3O-Nl\"};","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY':'e00624ca-0648-4efd-9fcc-56771035be83'\r\n    }\r\n})\r\n\r\n\r\n//метод\r\nexport const userApi = {\r\n\r\n    getUsersApi(pageSize, currentPage=1) {\r\n        return (\r\n            instance.get(`users?count=${pageSize}&page=${currentPage}`).then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n    postUser(Userid) {\r\n        return (\r\n            instance.post(`follow/`+ Userid).then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n    deleteUser(Userid) {\r\n        return (\r\n            instance.delete(`follow/`+ Userid).then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n    getLoginName() {\r\n        return (\r\n            instance.get(`auth/me`).then(response => {\r\n                return response.data\r\n        })\r\n        )\r\n    },\r\n    getProfile(UserId) {\r\n        console.warn('старый метод')\r\n        return profileApi.getProfile(UserId)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const profileApi = {\r\n\r\n    getProfile(UserId) {\r\n        return (\r\n            instance.get(`profile/`+UserId).then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n    getProfileStatus(UserId) {\r\n        return (\r\n            instance.get(`profile/status/`+UserId).then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n    updateProfileStatus(status) {\r\n        return instance.put(`profile/status`, { status: status })\r\n    }\r\n\r\n}\r\n\r\nexport const loginApi = {\r\n\r\n    loginPost(email, password, rememberMe) {\r\n        return (\r\n            instance.post(`/auth/login`, {\r\n                email, password, rememberMe\r\n            }).then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n    logoutPost() {\r\n        return (\r\n            instance.delete(`/auth/login`).then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import {loginApi, userApi} from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst SET_USER_DATA = 'FOLLOW'\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n  //  isFetching: false\r\n}\r\n\r\nexport const authReduser = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n               // isAuth: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setUserData = (userId, email, login, isAuth) => ({   type: SET_USER_DATA, payload:{userId, email, login, isAuth} })\r\n\r\nexport const userName = () => async (dispatch) => {\r\n    let response = await userApi.getLoginName() //возвращается промис\r\n\r\n    if(response.resultCode === 0){\r\n        let {email, id , login} = response.data;\r\n        dispatch(setUserData(id, email , login, true));\r\n    }\r\n}\r\n\r\nexport const userlogin = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n    let response = await loginApi.loginPost(email, password, rememberMe)\r\n\r\n    if(response.resultCode === 0){\r\n        dispatch(userName())\r\n    } else {\r\n        dispatch(stopSubmit(\"login\", {_error: response.messages}));\r\n    }\r\n}\r\n\r\n/*\r\nexport const userlogut = () => (dispatch) => {\r\n    loginApi.logoutPost().then(response => {\r\n        if(response.resultCode === 0){\r\n            dispatch(setUserData(null, null , null, false));\r\n        }\r\n    })\r\n}*/\r\n\r\nexport const userlogut = () => async (dispatch) => {\r\n    let response = await loginApi.logoutPost()\r\n\r\n    if(response.resultCode === 0){\r\n        dispatch(setUserData(null, null , null, false));\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.63466324.svg\";","import style from './header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {userlogut} from \"../../redux/authReducer\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\nexport const Header = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <header>\r\n            <a href=\"/\"><img src={logo} className={style.logo} alt=\"\"/></a>\r\n\r\n            {\r\n                (props.isAuth) ?\r\n                    <div className={style.loginBlock}>\r\n                        {props.login}\r\n                        <button onClick={props.userlogut}> Выйти </button>\r\n                    </div>\r\n                 :\r\n                    <div className={style.loginBlock}>\r\n                        <NavLink to={'/login'}>Авторизация</NavLink>\r\n                    </div>\r\n            }\r\n\r\n\r\n        </header>\r\n    );\r\n}","import './footer.css'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n             Футер\r\n        </footer>\r\n    );\r\n}","import style from './leftMenu.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const LeftMenu = () => {\r\n    return (\r\n        <div className={style.leftMenu}>\r\n             <ul>\r\n                 <li className={style.item}>\r\n                     <NavLink to=\"/profile\" activeClassName={style.active}>Профиль</NavLink>\r\n                 </li>\r\n                 <li className={style.item}>\r\n                     <NavLink to=\"/messages\" activeClassName={style.active}>Сообщения</NavLink>\r\n                 </li>\r\n                 <li className={style.item}>\r\n                     <NavLink to=\"/users\" activeClassName={style.active}>Пользователи</NavLink>\r\n                 </li>\r\n                 {/*<li>Найстройки</li>*/}\r\n                 <li><a href=\"https://onlinetimer.ru/#!/timer/2021-03-01T10:49:34.984Z/2021-03-01T08:47:45.266Z/forward/0/2/100/t/2021-03-01T11:59:25.799Z/\" target=\"_blank\">Таймер</a></li>\r\n             </ul>\r\n        </div>\r\n    );\r\n}","import {NavLink} from \"react-router-dom\";\r\nimport style from \"../dialogs/dialogs.module.css\";\r\n\r\nexport const VisibleTime = (props) => {\r\n    return (\r\n        <div className=\"item\">\r\n            {props.dateState} - {props.timeState} - {props.study}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TimeStudy = () => {\r\n\r\n    let arrTime = [\r\n        {id: '0', 'date': '28.02.2021', 'time': '02:50:00', 'study': 'React 1 рок'},\r\n        {id: '1', 'date': '01.03.2021', 'time': '03:45:38', 'study': 'React 25 урок'},\r\n        {id: '2', 'date': '02.03.2021', 'time': '03:15:05', 'study': 'React 35 урок'},\r\n        {id: '3', 'date': '03.03.2021', 'time': '06:26:28', 'study': 'React 40 урок'},\r\n        {id: '4', 'date': '04.03.2021', 'time': '05:48:10', 'study': 'React 49 урок'},\r\n        {id: '5', 'date': '05.03.2021', 'time': '03:02:08', 'study': 'React 55 урок'},\r\n        {id: '6', 'date': '06.03.2021', 'time': '04:11:51', 'study': 'React 59 урок'},\r\n        {id: '7', 'date': '07.03.2021', 'time': '06:08:03', 'study': 'React 63 урок'},\r\n        {id: '8', 'date': '08.03.2021', 'time': '01:41:00', 'study': 'React 65 урок'},\r\n        {id: '9', 'date': '09.03.2021', 'time': '03:11:07', 'study': 'React 68 урок'},\r\n        {id: '10', 'date': '10.03.2021', 'time': '03:13:04', 'study': 'React 72 урок'},\r\n        {id: '11', 'date': '11.03.2021', 'time': '02:03:04', 'study': 'React 74 урок'},\r\n        {id: '12', 'date': '12.03.2021', 'time': '03:29:15', 'study': 'React 77 урок'},\r\n        {id: '13', 'date': '13.03.2021', 'time': '01:51:05', 'study': 'React 79 урок'},\r\n        {id: '14', 'date': '14.03.2021', 'time': '02:13:25', 'study': 'React 81 урок'},\r\n        {id: '15', 'date': '15.03.2021', 'time': '05:31:07', 'study': 'React 89 урок'},\r\n        {id: '16', 'date': '16.03.2021', 'time': '06:36:30', 'study': 'React 94 урок'},\r\n        {id: '17', 'date': '17.03.2021', 'time': '01:50:30', 'study': 'React 95 урок, udemy 1 урок'},\r\n    ]\r\n\r\n    let arrTimeVisible = arrTime.map( item => (<VisibleTime dateState={item.date} key={item.id} timeState={item.time} study={item.study} />));\r\n\r\n\r\n    function SEcondTime(str) {\r\n        let massTime = str.split(':');\r\n\r\n        let h = Number(massTime[0]);\r\n        let m = Number(massTime[1]);\r\n        let s = Number(massTime[2]);\r\n\r\n        let sec = (h * 60 * 60) + m * 60 + s;\r\n        return sec;\r\n    }\r\n\r\n    let col = 0;\r\n    let time = \"\";\r\n    let allTime = \"\";\r\n    while(col<arrTime.length) {\r\n        time = SEcondTime(arrTime[col].time);\r\n        allTime = Number(time) + Number(allTime);\r\n        col++;\r\n    }\r\n\r\n    let seconds = parseInt(allTime, 10);\r\n\r\n    let days = Math.floor(seconds / (3600*24));\r\n    seconds  -= days*3600*24;\r\n    let hrs   = Math.floor(seconds / 3600);\r\n    seconds  -= hrs*3600;\r\n    let mnts = Math.floor(seconds / 60);\r\n    seconds  -= mnts*60;\r\n\r\n    if(String(mnts).length==1){mnts = \"0\" + mnts }\r\n    if(String(hrs).length==1){hrs = \"0\" + hrs }\r\n\r\n    let TimeDay = days+\" дня, \"+hrs+\":\"+mnts+\":\"+seconds;\r\n\r\n    return (\r\n        <div>\r\n            Время учебы: <br/>\r\n\r\n            {arrTimeVisible}\r\n\r\n\r\n            Полное время: {TimeDay}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './myPosts.css'\r\nimport {Post} from \"./Post/Post\";\r\nimport {Profile} from \"../profile/profile\";\r\nimport {Posts} from \"../myPosts/myPosts\";\r\nimport {addPostActionCreator, profileReducer, updateNewPostTextActionCreator} from \"../../redux/profileReducer\";\r\nimport StoreContext from \"../../StoreContext\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profileReducer.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (text) => {\r\n            let action = addPostActionCreator(text);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\n","import React from 'react'\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode : true,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeEditMode = () => {\r\n        this.setState({\r\n            editMode:false\r\n        })\r\n    }\r\n    deactivatedEditMode = () => {\r\n        this.setState({\r\n            editMode:true\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n\r\n            <>\r\n\r\n                <div>Мой статус</div>\r\n                <div>\r\n                    {this.state.editMode ? <span onDoubleClick={ this.activeEditMode }>{this.props.status}</span>\r\n                        : <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deactivatedEditMode } type=\"text\"\r\n                                 value={this.state.status || \"Изменить статус\"}/>   }\r\n\r\n                </div>\r\n\r\n\r\n                <br/><br/>\r\n\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProfileStatus","import React, {useState, useEffect} from 'react'\r\n\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n //   let [editMode, setEditMode] = useState({editMode: false, status: props.status});\r\n    let [editMode, setEditMode] = useState( false);\r\n    let [status, setStatus] = useState( props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activeEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivatedEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus( e.currentTarget.value )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>Мой статус</div>\r\n            <div>\r\n                { !editMode &&\r\n                    <span onDoubleClick={ activeEditMode }>{props.status}</span>\r\n                }\r\n                { editMode &&\r\n                    <input onChange={ onStatusChange }  autoFocus={true} onBlur={ deactivatedEditMode }  type=\"text\" value={ status || \"Изменить статус\"}/>\r\n                }\r\n            </div>\r\n            <br/><br/>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusHooks","export default __webpack_public_path__ + \"static/media/topimg.1efb9bff.jpg\";","import style from './profile.module.css'\r\nimport {TimeStudy} from \"../timeStudy/timeStudy\";\r\nimport {Posts} from \"../myPosts/myPosts\";\r\nimport {MyPostsContainer} from \"../myPosts/myPostsContainer\";\r\nimport ProfileStatus from \"./profileStatus\";\r\nimport ProfileStatusHooks from \"./profileStatusHooks\";\r\nimport topimg from \"../../assets/images/topimg.jpg\";\r\n\r\nexport const Profile = ({status, updateStatus, profile}) => {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className={style.topimg}>\r\n                <img src={topimg} alt=\"\"/>\r\n            </div>\r\n\r\n            <div className={style.content}>\r\n\r\n                <ProfileStatusHooks status={status} updateStatus={updateStatus} />\r\n\r\n                <TimeStudy /> <br/> <br/>\r\n\r\n                 Мой профиль <br/><br/>\r\n\r\n                 <MyPostsContainer profile={profile}/>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","\r\n\r\nexport const updateObjectInArray = (items, userId, objPropName, newObjProps) => {\r\n\r\n    return items.map( user => {\r\n    //  if(user.id === userId) {\r\n    if(user.[objPropName] === userId) {\r\n        //return { ...user, followed: true}\r\n        return { ...user, ...newObjProps}\r\n    }\r\n    return user\r\n    })\r\n\r\n}","import {userApi} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst TOOGLE_FOLLOWIN_PROGRESS = 'TOOGLE_FOLLOWIN_PROGRESS'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_USER_COUNT = 'SET_USER_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\n\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n}\r\n\r\nexport const usersReducerNew = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return { ...state, users: [...action.users]}\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage}\r\n        case SET_USER_COUNT:\r\n            return { ...state, totalUsersCount: action.countUsers}\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching}\r\n        case FOLLOW:\r\n            return {\r\n                    ...state,\r\n                    users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n/*                    users: state.users.map( user => {\r\n                        if(user.id === action.userId) {\r\n                            return { ...user, followed: true}\r\n                        }\r\n                        return user\r\n                    })*/\r\n                }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n/*                users: state.users.map( user => {\r\n                    if(user.id === action.userId) {\r\n                        return { ...user, followed: false}\r\n                    }\r\n                    return user\r\n                })*/\r\n            }\r\n        case TOOGLE_FOLLOWIN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [ ...state.followingInProgress, action.userId  ]\r\n                    : [ ...state.followingInProgress.filter(id => id != action.userId) ]\r\n\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const follow = (userId) => ({   type: FOLLOW, userId })\r\nexport const unfollow = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const toogleFollowingInProgress = (followingInProgress, userId) => ({ type: TOOGLE_FOLLOWIN_PROGRESS, followingInProgress, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const currentPageClick = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUserCOunt = (countUsers) => ({ type: SET_USER_COUNT, countUsers })\r\nexport const setIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\n\r\nexport const getUsersThunk = (pageSize, currentPage) => async (dispatch) => {\r\n\r\n    dispatch(setIsFetching(true));\r\n\r\n\r\n    let data = await userApi.getUsersApi(pageSize, currentPage)\r\n    dispatch(currentPageClick(currentPage))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUserCOunt(data.totalCount))\r\n    dispatch(setIsFetching(false));\r\n}\r\n/*\r\nexport const postUsersThunk = (id) => async (dispatch) => {\r\n    dispatch(toogleFollowingInProgress(true, id))\r\n\r\n    let data =  await userApi.postUser(id)\r\n    if(data.resultCode === 0){\r\n        dispatch(follow(id))\r\n    }\r\n    dispatch(toogleFollowingInProgress(false, id))\r\n}\r\n\r\nexport const deleteUsersThunk = (id) => async (dispatch) => {\r\n    dispatch(toogleFollowingInProgress(true, id))\r\n    let data = await userApi.deleteUser(id)\r\n    if(data.resultCode === 0){\r\n        dispatch(unfollow(id))\r\n    }\r\n    dispatch(toogleFollowingInProgress(false, id))\r\n}*/\r\n\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n\r\n    dispatch(toogleFollowingInProgress(true, id))\r\n\r\n    let data = await apiMethod(id)\r\n    if(data.resultCode === 0){\r\n        dispatch(actionCreator(id))\r\n    }\r\n    dispatch(toogleFollowingInProgress(false, id))\r\n}\r\n\r\nexport const postUsersThunk = (id) => async (dispatch) => {\r\n    let apiMethod = userApi.postUser(id)\r\n    let actionCreator = follow;\r\n    followUnfollowFlow(dispatch, id, userApi.postUser.bind(id), follow)\r\n}\r\n\r\nexport const deleteUsersThunk = (id) => async (dispatch) => {\r\n    let apiMethod = userApi.deleteUser.bind(id)\r\n    let actionCreator = unfollow;\r\n    followUnfollowFlow(dispatch, id, apiMethod, actionCreator)\r\n}\r\n\r\n\r\n\r\n","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersReducer.users;\r\n}\r\n\r\n//export const getUsersSuperSelector = createSelector(getUsers, getIsFetching, (users, isFetching) => {\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersReducer.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersReducer.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersReducer.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersReducer.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersReducer.followingInProgress;\r\n}\r\n","import React from 'react'\r\nimport style from \"../users/users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport * as axios from \"axios\";\r\nimport {userApi} from \"../../api/api\";\r\nimport {Button} from \"antd\";\r\nimport {\r\n    deleteUsersThunk,\r\n    follow,\r\n    getUsersThunk,\r\n    postUsersThunk,\r\n    Testunfollow,\r\n    toogleFollowingInProgress,\r\n    unfollow\r\n} from \"../../redux/userReducer\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersSuperSelector\r\n} from \"../../redux/userSelector\";\r\n/*\r\n\r\nexport const Paginator = ({totalUsersCount, pageSize, onPageClick, currentPage}) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages = []\r\n    for (let i=1; i<= pagesCount; i++ ){\r\n        if(i>20) break;\r\n        pages.push(i)\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState({activePage: pageNumber});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                pages.map(pag => {\r\n                    return <span onClick={ (e) => { onPageClick(pag)}  } className={currentPage === pag && style.bold}>{pag}</span>\r\n                })\r\n            }\r\n\r\n\r\n\r\n            <div>Всего страниц: { pagesCount }</div>\r\n            <Pagination\r\n                activePage={this.state.activePage}\r\n                itemsCountPerPage={10}\r\n                totalItemsCount={450}\r\n                pageRangeDisplayed={5}\r\n                onChange={this.handlePageChange.bind(this)}\r\n            />\r\n        </div>\r\n    )\r\n}*/\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        currentPage: getCurrentPage(state),\r\n    }\r\n}\r\n\r\nexport class PaginatorComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activePage: this.currentPage\r\n        };\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState({activePage: pageNumber});\r\n        this.props.onPageClick(pageNumber)\r\n    }\r\n\r\n    render() {\r\n\r\n        let {totalUsersCount, pageSize, onPageClick, currentPage} = this.props;\r\n\r\n        let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n        return (\r\n            <div>\r\n                <Pagination\r\n                    activePage={currentPage}\r\n                    itemsCountPerPage={10}\r\n                    totalItemsCount={totalUsersCount}\r\n                    pageRangeDisplayed={10}\r\n                    itemClass=\"page-item\"\r\n                    linkClass=\"page-link\"\r\n                    onChange={this.handlePageChange.bind(this)}\r\n                />\r\n\r\n                <div>Всего страниц: {pagesCount}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Paginator = compose(connect(mapStateToProps, { }))(PaginatorComponent)\r\n","export default __webpack_public_path__ + \"static/media/avanone.95bf63c3.webp\";","import React from 'react'\r\nimport style from \"./users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport * as axios from \"axios\";\r\nimport {userApi} from \"../../api/api\";\r\nimport {Button} from \"antd\";\r\nimport {Testunfollow} from \"../../redux/userReducer\";\r\nimport {Paginator} from \"../Paginator/paginator\";\r\nimport avanone from \"../../assets/images/avanone.webp\";\r\n\r\nlet User = ({user, deleteUsersThunk, postUsersThunk, followingInProgress}) => {\r\n\r\n    return (\r\n            <div className={style.block} key={user.id}>\r\n                <div className={style.buttonFriends}>\r\n                    { user.followed ? <Button disabled={followingInProgress.some(id => id === user.id)} onClick={ () => {\r\n                            deleteUsersThunk(user.id)\r\n                    }\r\n                    } > UnFollow </Button> : <Button disabled={followingInProgress.some(id => id === user.id)} onClick={ () => {\r\n                            postUsersThunk(user.id)\r\n                       }\r\n                    } > Follow </Button>}\r\n                </div>\r\n                <div className={style.userprofile}>\r\n                    <NavLink to={ '/profile/'+ user.id }><div className={style.avatar}>{user.photos.small === null ? <img src={avanone} alt=\"\"/> : <img src={user.photos.small} alt=\"\"/>}</div></NavLink>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react'\r\nimport style from \"./users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport * as axios from \"axios\";\r\nimport {userApi} from \"../../api/api\";\r\nimport {Button} from \"antd\";\r\nimport {Testunfollow} from \"../../redux/userReducer\";\r\nimport {Paginator} from \"../Paginator/paginator\";\r\nimport User from \"./user\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageClick, followingInProgress, deleteUsersThunk, postUsersThunk, ...props}) => {\r\n\r\n    return (\r\n        <div>\r\n            Пользователи: <br/><br/>\r\n            <div className={style.pagination} >\r\n\r\n       {/*         {\r\n                    pages.map(pag => {\r\n                        return <span onClick={ (e) => { props.onPageClick(pag)}  } className={props.currentPage === pag && style.bold}>{pag}</span>\r\n                    })\r\n                }*/}\r\n\r\n                <Paginator currentPage={currentPage} totalUsersCount={totalUsersCount} onPageClick={onPageClick} pageSize={pageSize} />\r\n\r\n            </div>\r\n\r\n            {\r\n                props.users.map(user => <User user={user} key={user.id} followingInProgress={followingInProgress} deleteUsersThunk={deleteUsersThunk} postUsersThunk={postUsersThunk} />)\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    deleteUsersThunk,\r\n    follow, getUsersThunk, postUsersThunk,\r\n    toogleFollowingInProgress,\r\n    unfollow,\r\n} from \"../../redux/userReducer\";\r\nimport Users from \"./users\";\r\nimport style from \"./users.module.css\";\r\nimport Preloader from \"../Preloader/preloader\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {Dialogs} from \"../dialogs/dialogs\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers, getUsersSuperSelector\r\n} from \"../../redux/userSelector\";\r\n\r\n/*let  mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersReducer.users,\r\n        pageSize: state.usersReducer.pageSize,\r\n        totalUsersCount: state.usersReducer.totalUsersCount,\r\n        currentPage: state.usersReducer.currentPage,\r\n        isFetching: state.usersReducer.isFetching,\r\n        followingInProgress: state.usersReducer.followingInProgress\r\n    }\r\n}*/\r\n\r\n\r\n\r\nclass UserContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        //this.props.getUsersThunk() //так пересылаются все пропсы\r\n        const {pageSize, currentPage} = this.props\r\n        this.props.getUsersThunk(pageSize, currentPage)\r\n    }\r\n\r\n    onPageClick = (pageNumber) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsersThunk(pageSize, pageNumber)\r\n    }\r\n\r\n\r\n    render() {\r\n        return  <>\r\n\r\n            {this.props.isFetching ? <Preloader />: null}\r\n\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageClick={this.onPageClick}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                postUsersThunk={this.props.postUsersThunk}\r\n                postDeleteUsersThunk={this.props.postDeleteUsersThunk}\r\n                deleteUsersThunk={this.props.deleteUsersThunk}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n                toogleFollowingInProgress={this.props.toogleFollowingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet  mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport const UsersContainer = compose(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        toogleFollowingInProgress,\r\n        getUsersThunk,\r\n        postUsersThunk,\r\n        deleteUsersThunk\r\n    })\r\n)(UserContainer)\r\n/*\r\n\r\nexport const UsersContainer = connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    toogleFollowingInProgress,\r\n    getUsersThunk,\r\n    postUsersThunk,\r\n    deleteUsersThunk\r\n    })(UserContainer);\r\n*/\r\n","import React from \"react\"\r\nimport {Header} from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport {userlogut, userName} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n        this.props.userName()\r\n    }\r\n\r\n    render() {\r\n        return <Header { ...this.props }/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.authReduser.isAuth,\r\n    login: state.authReduser.login,\r\n    email: state.authReduser.email\r\n});\r\n\r\nexport default connect(mapStateToProps, {userName, userlogut})(HeaderContainer);\r\n","import React from 'react'\r\nimport style from './FormControl.module.css'\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError =  meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={ hasError && style.error}>\r\n            { hasError && <div><span>{meta.error}</span></div>}\r\n            <input { ...input } { ...props } />\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport {Button, Checkbox} from \"antd\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {authReduser, userlogin} from \"../../redux/authReducer\";\r\nimport {Input} from \"../../components/FormControls/Input\";\r\nimport {requireField} from \"../../utils/validator\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../../components/FormControls/FormControl.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit,error}) => {\r\n\r\n    return (\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Field component={Input} validate={[requireField]} name={\"login\"} type=\"text\" placeholder={\"Логин\"}/>\r\n                </div>\r\n                <div>\r\n                    <Field component={Input} validate={[requireField]}name={\"password\"} type=\"password\" placeholder={\"Пароль\"}/>\r\n                </div>\r\n                <div>\r\n                    <Field component={\"input\"} type={\"checkbox\"} name={\"rememberMe\"} /> Запомнить меня\r\n                </div>\r\n                {error && < div className={style.formError}>\r\n                    {error}\r\n                    </div>\r\n                }\r\n                <div>\r\n                    <button>Войти</button>\r\n                </div>\r\n            </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.userlogin(formData.login, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div> <br/> <br/>\r\n            <a href=\"https://social-network.samuraijs.com/\" target=\"_blank\"> Авторизоваться </a> <br/><br/>\r\n\r\n            {<LoginReduxForm onSubmit={onSubmit} />}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.authReduser.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {userlogin})(Login);","import {loginApi, userApi} from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form'\r\nimport {userName} from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED'\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nexport const appReduser = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setInitialized = () => ({ type: SET_INITIALIZED })\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise  = dispatch(userName());\r\n    //dispatch(someDataData());\r\n\r\n    Promise.all([promise]).then( () => {\r\n        dispatch(setInitialized());\r\n    })\r\n\r\n\r\n\r\n}\r\n\r\n//export default appReduser","import React from \"react\"\r\nimport {Profile} from \"./profile\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {ProfileShow, setUserProfile, StatusShow, updateStatus} from \"../../redux/profileReducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {userApi} from \"../../api/api\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {Dialogs} from \"../dialogs/dialogs\";\r\nimport {compose} from \"redux\";\r\nimport {authReduser} from \"../../redux/authReducer\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let UserId = this.props.match.params.userId;\r\n        if(!UserId){\r\n            //UserId=15570\r\n            UserId=this.props.userIdMy\r\n            if(!UserId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n/*        userApi.getProfile(UserId).then(data => {\r\n                this.props.setUserProfile(data)\r\n            }\r\n        )*/\r\n        this.props.ProfileShow(UserId);\r\n        this.props.StatusShow(UserId)\r\n    }\r\n\r\n\r\n\r\n     render () {\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profileReducer.profile,\r\n    status: state.profileReducer.status,\r\n    userIdMy: state.authReduser.userId,\r\n    isAuth: state.authReduser.isAuth,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, ProfileShow, StatusShow, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer)","import React from \"react\";\r\nimport {Component} from \"react\";\r\nimport './App.css';\r\nimport {Header} from \"./components/header/header\";\r\nimport {Footer} from \"./components/footer/footer\";\r\nimport {LeftMenu} from \"./components/leftMenu/leftMenu\";\r\nimport {Profile} from \"./components/profile/profile\";\r\nimport {Dialogs} from \"./components/dialogs/dialogs\";\r\nimport {HashRouter, BrowserRouter, Route} from \"react-router-dom\";\r\n//import {DialogsConteiner} from \"./components/dialogs/dialogsContainer\";\r\nimport {UsersContainer} from \"./components/users/usersContainer\";\r\nimport HeaderContainer from \"./components/header/headerContainer\";\r\nimport Login from \"./pages/login/login\";\r\nimport {connect} from \"react-redux\";\r\nimport {userlogut, userName} from \"./redux/authReducer\";\r\nimport Preloader from \"./components/Preloader/preloader\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\n\r\n\r\n\r\n/*\r\nconst DialogsConteiner = React.lazy( () => import(\"./components/dialogs/dialogsContainer\"));\r\nconst ProfileContainer = React.lazy( () => import(\"./components/profile/profileContainer\"));\r\n\r\n*/\r\n\r\nimport ProfileContainer from \"./components/profile/profileContainer\";\r\nimport {withSuspense} from \"./components/hoc/withSuspense\";\r\n//import DialogsConteiner from \"./components/dialogs/dialogsContainer\";\r\nconst DialogsConteiner = React.lazy( () => import(\"./components/dialogs/dialogsContainer\"));\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n\r\n        if(!this.props.initialized) {\r\n            return (\r\n                <Preloader />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <HashRouter>\r\n                <div className=\"App\">\r\n                    <HeaderContainer/>\r\n                    <LeftMenu/>\r\n                    <div className=\"content\">\r\n                        <Route exact path=\"/\" render={() => <ProfileContainer/>}/>\r\n\r\n                        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                        {/*<Route path=\"/messages\" render={() => <DialogsConteiner/>}/>*/}\r\n\r\n                        <Route path=\"/messages\" render={withSuspense(DialogsConteiner)}/>\r\n\r\n             {/*           <Route path=\"/profile/:userId?\" render={() => {\r\n                            return <React.Suspense fallback={<Preloader />}>\r\n                                <ProfileContainer/>\r\n                            </React.Suspense>  }}/>\r\n                        <Route path=\"/messages\" render={() => {\r\n                            return <React.Suspense fallback={<Preloader />}>\r\n                               <DialogsConteiner/>\r\n                           </React.Suspense> }}/>*/}\r\n\r\n\r\n                        <Route path=\"/users\" render={() => <UsersContainer/>}/>\r\n                        <Route path=\"/login\" render={() => <Login/>}/>\r\n                    </div>\r\n                    <Footer/>\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    initialized: state.appReduser.initialized,\r\n});\r\n\r\nexport default connect(mapStateToProps, {initializeApp})(App);\r\n\r\n","import {Redirect} from \"react-router-dom\";\r\nimport {Dialogs} from \"../dialogs/dialogs\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Preloader from \"../Preloader/preloader\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.authReduser.isAuth\r\n    }\r\n}\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n        return (props) => {\r\n            return <React.Suspense fallback={<Preloader />}>\r\n                <Component { ...props } />\r\n            </React.Suspense>\r\n        }\r\n\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {messageReducer} from \"./messagesReduser\";\r\nimport {usersReducer, usersReducerNew} from \"./userReducer\";\r\nimport {authReduser} from \"./authReducer\";\r\nimport thunkMiddlewaer from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport {appReduser} from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profileReducer,\r\n    messageReducer,\r\n    usersReducer: usersReducerNew,\r\n    authReduser,\r\n    appReduser,\r\n    form: formReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddlewaer)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddlewaer));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/redux-store'\r\nimport StoreContext from './StoreContext'\r\nimport {Provider} from \"react-redux\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import {profileApi, userApi} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\n\r\nconst getRandomInt = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nlet initialStatedsasad = {\r\n    posts: [\r\n        {id: 1, message: 'Как дела?', like: getRandomInt(0, 120)},\r\n        {id: 2, message: 'Чем занят?', like: getRandomInt(0, 120)},\r\n        {id: 3, message: 'Займи 5000?', like: getRandomInt(0, 120)},\r\n        {id: 4, message: 'Отдам через неделю', like: getRandomInt(0, 120)},\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nexport const profileReducer = (state = initialStatedsasad, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.text,\r\n                like: getRandomInt(0, 120),\r\n            }\r\n            return {\r\n                ...state,\r\n                newPostText: \"\",\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        case DELETE_POST:\r\n            return {  ...state, posts: state.posts.filter(p => p.id != action.Postid) }\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.setUserProfile}\r\n        case SET_STATUS:\r\n            return {...state, status: action.setUserStatus}\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = (text) => ({   type: ADD_POST, text: text })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, setUserProfile: profile })\r\nexport const setUserStatus = (userid) => ({ type: SET_STATUS, setUserStatus: userid })\r\nexport const deletePost = (Postid) => ({ type: DELETE_POST, Postid: Postid })\r\n\r\nexport const ProfileShow = (UserId) => async (dispatch) => {\r\n    let data = await userApi.getProfile(UserId)\r\n    dispatch(setUserProfile(data))\r\n}\r\n\r\nexport const StatusShow = (UserId) => async (dispatch) => {\r\n    let data = await  profileApi.getProfileStatus(UserId)\r\n    dispatch(setUserStatus(data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let data = await  profileApi.updateProfileStatus(status)\r\n    if(data.data.resultCode === 0){\r\n        dispatch(setUserStatus(status))\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"users_avatar__21mF8\",\"bold\":\"users_bold__3q12B\",\"pagination\":\"users_pagination__169Bh\",\"block\":\"users_block__2Or8p\",\"buttonFriends\":\"users_buttonFriends__3tEdN\",\"userprofile\":\"users_userprofile__3N1Z1\"};","export const requireField = value => {\r\n    if (value) return undefined\r\n\r\n    return 'Обязательное поле'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Максимальная длина ${maxLength} символов`\r\n    return undefined\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"dialogs_content__5QLkx\",\"dislogs\":\"dialogs_dislogs__3fWn_\",\"dialog_items\":\"dialogs_dialog_items__KMhuT\",\"messanges\":\"dialogs_messanges__2dqMB\",\"active\":\"dialogs_active__kfK57\"};","import style from \"./preloader.module.css\";\r\n\r\nconst Preloader = () => {\r\n    return (<div className={style.lds_spinner}><div></div><div></div><div></div><div></div></div>)\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftMenu\":\"leftMenu_leftMenu__1p43Y\",\"active\":\"leftMenu_active__4zMtW\",\"item\":\"leftMenu_item__3n5RH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControl_error__3t8bW\",\"formError\":\"FormControl_formError__1GEfQ\"};","import React from 'react';\r\nimport style from './dialogs.module.css'\r\nimport {DialogItem} from \"./Dialogitem/dialogitem\";\r\nimport {Message} from \"./Message/message\";\r\nimport {\r\n    addMessageActionCreator, messageReducer,\r\n    updateNewMessageTextActionCreator,\r\n} from \"../../redux/messagesReduser\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../FormControls/Textarea\";\r\nimport {maxLengthCreator, requireField} from \"../../utils/validator\";\r\n\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst DialogForm = (props) => {\r\n\r\n   return (\r\n       <form onSubmit={props.handleSubmit}>\r\n           <Field component={Textarea} validate={[requireField, maxLength100]} name={\"textarea\"} placeholder={\"введите сообщение\"} />\r\n           <button>Отправить</button>\r\n       </form>\r\n   )\r\n}\r\n\r\nconst DialogReduxForm = reduxForm({\r\n    form: 'dialog'\r\n})(DialogForm)\r\n\r\nexport const Dialogs = (props) => {\r\n\r\n\r\n    let newDialogData = props.dialogs.map(dialog => (<DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>))\r\n    let newMessangesData = props.messages.map(dialog => (<Message key={dialog.id} message={dialog.message} />))\r\n\r\n    const addNewMessage = (formData) => {\r\n        props.addMessage(formData.textarea)\r\n        formData.textarea = \"\"\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            Сообщения <br/><br/>\r\n            <div className={style.dislogs}>\r\n\r\n                <div className={style.dialog_items}>\r\n                    {newDialogData}\r\n                </div>\r\n\r\n                <div className={style.messanges} >\r\n                    {newMessangesData}\r\n\r\n                    <DialogReduxForm onSubmit={addNewMessage}/>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport style from './FormControl.module.css'\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError =  meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={ hasError ? style.error : \"\"}>\r\n            { hasError && <div><span>{meta.error}</span></div>}\r\n            <textarea { ...input } { ...props }></textarea>\r\n        </div>\r\n    )\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"header_logo__35lb_\",\"loginBlock\":\"header_loginBlock__1o6o4\"};"],"sourceRoot":""}